---
import Baselayout from '../../layouts/Base.astro'
import PostsList from '../../components/PostsList.astro'
import TagsList from '../../components/TagsList.astro'
import {generateTagData} from '../../utils/helpers.js'


export async function getStaticPaths() {
	const posts = (await Astro.glob('../posts/*.{md,mdx}')).sort(
		(a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
	);
    
    const tags = new Set();
    posts.map(post => {
        post.frontmatter.tags && post.frontmatter.tags.map(tag => {
            tags.add(tag)
        })
    })
    const uniqueTags = generateTagData(tags);

	return uniqueTags.map((tag) => {
        // filter the posts that match the given tag
        const tagPosts = posts.filter((post) => post.frontmatter.tags.includes(tag.name))
        return {
            params: {slug: tag.slug}, 
            props: {
                tag: tag.name, 
                posts: tagPosts,
                allPosts: posts
            }
        };
    });
}


// All paginated data is passed on the "page" prop
const {tag, posts, allPosts} = Astro.props
const description = tag + ' description content'
---

<Baselayout title={tag} description={description}>
    <h1 class="title mb-8">{tag}</h1>
    <TagsList posts={allPosts} links={true} />
    <PostsList posts={posts} />
</Baselayout>