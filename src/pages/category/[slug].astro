---
import Baselayout from '../../layouts/Base.astro'
import PostsList from '../../components/PostsList.astro'
import CategoriesList from '../../components/CategoriesList.astro'
import {generateCategoryData} from '../../utils/helpers.js'


export async function getStaticPaths() {
	const posts = (await Astro.glob('../*.{md,mdx}')).sort(
		(a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
	);
    
    const categories = new Set();
    posts.map(post => {
        post.frontmatter.categories && post.frontmatter.categories.map(category => {
            categories.add(category)
        })
    })
    const uniqueCategories = generateCategoryData(categories);

	return uniqueCategories.map((category) => {
        // filter the posts that match the given category
        const categoryPosts = posts.filter((post) => post.frontmatter.categories.includes(category.name))
        return {
            params: {slug: category.slug}, 
            props: {
                category: category.name, 
                posts: categoryPosts,
                allPosts: posts
            }
        };
    });
}



// All paginated data is passed on the "page" prop
const {category, posts, allPosts} = Astro.props
const description = category + ' description content'
---

<Baselayout title={category} description={description}>
    <h1 class="title mb-8">{category}</h1>
    <CategoriesList posts={allPosts} links={true} />
    <PostsList posts={posts} />
</Baselayout>